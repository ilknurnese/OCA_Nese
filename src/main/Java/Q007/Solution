static fields gets changed for every object

static variable is class level variable and
it is shared to all objects of that class.
and whenever its value gets updated it will update to all objects.
so correct ans is 5 4 5 6
-----





package main.Java.Q007;

public class X {

    static int i;
    int j;

    public static void main(String[] args) {
        X x1 = new X();
        X x2 = new X();
        x1.i = 3;
        x1.j = 4;
        x2.i = 5;
        x2.j = 6;
        System.out.println(
                x1.i + " " +
                x1.j + " " +
                x2.i + " " +
                x2.j);
    }

// What is the result?
// A.3 4 5 6
// B.3 4 3 6
// C.5 4 5 6
// D.3 6 4 6

}




The result of this code is:

```
5 4 5 6
```

why:

1. **Static variable `i`:**
   - The variable `i` is static, meaning it is shared between all instances of the class `X`.
   - When `x1.i = 3;` is executed, it sets the static variable `i` to `3` for all instances of the class.
   - When `x2.i = 5;` is executed, it updates the same static variable `i` to `5` for all instances.

2. **Instance variable `j`:**
   - The variable `j` is an instance variable, meaning each instance of the class `X` has its own copy of `j`.
   - `x1.j = 4;` sets `x1`'s `j` value to `4`.
   - `x2.j = 6;` sets `x2`'s `j` value to `6`.

In the `System.out.println()` statement:
- `x1.i` prints `5` because the static variable `i` was last set to `5` by `x2`.
- `x1.j` prints `4`, the instance variable `j` for `x1`.
- `x2.i` prints `5`, the shared static variable `i`.
- `x2.j` prints `6`, the instance variable `j` for `x2`.

So, the correct answer is **C. 5 4 5 6**.