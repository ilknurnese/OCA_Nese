package main.Java.Q003;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

public class Q003 {

    public static void main(String[] args) {
        String date = LocalDate
                .parse("2024-10-08")                         // time is not assigned here
                .format(DateTimeFormatter.ISO_DATE_TIME);    //_TIME should be removed
        System.out.println(date);
    }
}

----------------------------------------

The issue in this code is the use of DateTimeFormatter.ISO_DATE_TIME.

When you parse a date string (e.g., "2024-10-08") with LocalDate.parse(),
only the date (year, month, day) is assigned, and no time information is included.

However, when formatting the date using DateTimeFormatter.ISO_DATE_TIME,
it expects both date and time information.

Since LocalDate only contains date information and no time,
using DateTimeFormatter.ISO_DATE_TIME will throw a DateTimeParseException.

If you only want to format the date, you should use DateTimeFormatter.ISO_DATE instead.
Otherwise, if you use a formatter that expects time information, an exception will be thrown.

Corrected code:
java
Copy code
String date = LocalDate
                  .parse("2024-10-08")
                  .format(DateTimeFormatter.ISO_DATE);  // ISO_DATE_TIME should be replaced with ISO_DATE
System.out.println(date);
This way, the output will be "2024-10-08" and no exception will occur at runtime.

Correct answer:
D. An exception is thrown at runtime.

----------------------------------------------------------------

Bu koddaki sorun, DateTimeFormatter.ISO_DATE_TIME     kullanılmasıdır.

LocalDate.parse() ile bir tarih string'i (örneğin "2024-10-08") parse edildiğinde
sadece tarih (yıl, ay, gün) bilgisi atanır, zaman bilgisi atanmaz.

Ancak, formatlama sırasında DateTimeFormatter.ISO_DATE_TIME  kullanıldığında,  zaman bilgisi de beklenir.

LocalDate ise sadece tarih içerir, zaman bilgisi içermez.

Bu nedenle DateTimeFormatter.ISO_DATE_TIME kullanıldığında, bir DateTimeParseException fırlatılır.

Eğer yalnızca tarihi formatlamak istiyorsanız, DateTimeFormatter.ISO_DATE kullanılmalıdır. Aksi halde zaman formatı bekleyen bir formatter kullanırsanız exception oluşur.

Düzeltilmiş kod:

String date = LocalDate
                  .parse("2024-10-08")
                  .format(DateTimeFormatter.ISO_DATE);  // ISO_DATE_TIME yerine ISO_DATE kullanılmalı
System.out.println(date);
Bu şekilde çıktınız "2024-10-08" olur ve runtime'da exception oluşmaz.

Doğru cevap:
D. An exception is thrown at runtime.